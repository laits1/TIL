사원의 FULL_NAME(FIRST_NAME + LAST_NAME) 과 이메일을 출력하자 
(이메일@HR.COM 으로 출력하자) 
SELECT FIRST_NAME || ' ' || LAST_NAME AS FULL_NAME, EMAIL || '@HR.COM' AS 이메일
FROM EMPLOYEES;

06년 이후에 입사한 사원의 이름(FIRST_NAME) 과 사원번호 (EMPLOYEE_ID)를 출력하자
SELECT FIRST_NAME, EMPLOYEE_ID
FROM EMPLOYEES
WHERE HIRE_DATE > '05/12/31';

사원의 이름(FIRST), 부서이름(DEPARTMENT_NAME), 부서가 있는 거리(STREET_ADDRESS), 부서가 있는 나라(COUNTRY_NAME) 를 출력하자
SELECT E.FIRST_NAME, D.DEPARTMENT_NAME, L.STREET_ADDRESS, C.COUNTRY_NAME
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L, COUNTRIES C
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.LOCATION_ID = L.LOCATION_ID
AND L.COUNTRY_ID = C.COUNTRY_ID;

SELECT FIRST_NAME, DEPARTMENT_NAME, STREET_ADDRESS, COUNTRY_NAME
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID)
JOIN LOCATIONS USING(LOCATION_ID)
JOIN COUNTRIES USING(COUNTRY_ID);


'부서번호가 90이고, 전화번호가 515로 시작하면서, 끝자리가 4567인 사원'이 관리하는 사원의 사번과 이름을 출력하자
SELECT EMPLOYEE_ID, FIRST_NAME
FROM EMPLOYEES
WHERE MANAGER_ID =
(SELECT EMPLOYEE_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90
AND PHONE_NUMBER LIKE '515%4567');


전화번호가 650.121.8009인 사원의 이름과, 사원이 속한 부서가 위치한 도시, 주소(STREET_ADDRESS + POSTAL_CODE) 를 출력하자


SELECT FIRST_NAME, CITY, STREET_ADDRESS || POSTAL_CODE
FROM EMPLOYEES JOIN DEPARTMENTS USING (DEPARTMENT_ID)
JOIN LOCATIONS USING (LOCATION_ID)
WHERE PHONE_NUMBER = '650.121.8009';


Canada 에서 일하고 있는 사원의 이름과, 도시, 월급을 출력하자
SELECT FIRST_NAME, CITY, SALARY
FROM EMPLOYEES E, COUNTRIES C, LOCATIONS L, DEPARTMENTS D
WHERE C.COUNTRY_NAME = 'Canada'
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND L.LOCATION_ID = D.LOCATION_ID
AND L.COUNTRY_ID = C.COUNTRY_ID;


SELECT FIRST_NAME, CITY, SALARY
FROM EMPLOYEES JOIN DEPARTMENTS USING (DEPARTMENT_ID)
JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID)
WHERE COUNTRY_NAME = 'Canada';




이름이 Guy 인 사원과 같은 부서에서 일하면서, Guy와 직업(JOB_ID)이 다른 사원의 모든 것을 출력하자

SELECT *
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 
(SELECT DEPARTMENT_ID
FROM EMPLOYEES
WHERE FIRST_NAME = 'Guy')
AND JOB_ID !=
(SELECT JOB_ID
FROM EMPLOYEES
WHERE FIRST_NAME = 'Guy');

직업이 06년 7월 24일에 변경된 사원의 이름과, 과거 직업, 현재 직업을 출력하자
SELECT FIRST_NAME, J.JOB_ID AS "과거 직업", E.JOB_ID AS "현재 직업"
FROM EMPLOYEES E JOIN JOB_HISTORY J USING (EMPLOYEE_ID)
WHERE END_DATE = '06/07/24';


관리자가 없는 부서의 이름과 부서번호를 출력하자

SELECT DEPARTMENT_NAME, DEPARTMENT_ID
FROM DEPARTMENTS
WHERE MANAGER_ID IS NULL;


IT 부서 관리자의 성(LAST_NAME)과, 월급을 출력하자 (JOIN 사용하지 않고)

SELECT LAST_NAME, SALARY
FROM EMPLOYEES
WHERE EMPLOYEE_ID =
(SELECT MANAGER_ID
FROM DEPARTMENTS
WHERE DEPARTMENT_NAME = 'IT');




관리자가 존재하는 부서의 / 장소 중 가장 많은 / 장소의 도시 이름을 출력하자 (ROWNUM 사용)


select city 
from locations 
where location_id = 
(select location_id from
(select ROWNUM, a.location_id from
(select location_id,count(*)cnt from departments
where manager_id is not null
group by location_id 
order by cnt desc)a
where rownum = '1'));

SELECT ROWNUM, A.CITY 
FROM
	(SELECT A.LOCATION_ID, B.CITY, COUNT(A.MANAGER_ID) CNT 
	FROM DEPARTMENTS A, LOCATIONS B 
	WHERE A.LOCATION_ID = B.LOCATION_ID 
	AND A.MANAGER_ID IS NOT NULL 
	GROUP BY A.LOCATION_ID, B.CITY 
	ORDER BY CNT DESC) A
WHERE ROWNUM = '1'


SELECT CITY, CNT, ROWNUM
FROM
	(SELECT CITY, COUNT(*) AS CNT
	FROM DEPARTMENTS JOIN LOCATIONS USING(LOCATION_ID)
	WHERE DEPARTMENT_ID IN
		(SELECT DEPARTMENT_ID
		FROM DEPARTMENTS
		WHERE MANAGER_ID IS NOT NULL)
	GROUP BY CITY
	ORDER BY 2 DESC)
WHERE ROWNUM = 1;


18년도가 근속 10주년인 사원의 이름과 입사일을 출력하자
SELECT FIRST_NAME, HIRE_DATE 
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE, 'YYYY') = '2008';

SELECT FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE BETWEEN '08/01/01' AND '08/12/31';

SELECT FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE SUBSTR(ADD_MONTHS(HIRE_DATE, 120), 1, 2) = 18;

사원 이름이 'S'로 시작하는 사원의 이름과 사원번호, 전화번호를 출력하자
SELECT FIRST_NAME || ' ' || LAST_NAME AS FULL_NAME, EMPLOYEE_ID, PHONE_NUMBER
FROM EMPLOYEES
WHERE LAST_NAME LIKE 'S%';

입사년도가 04년 이후인 사원들중 Seattle 에서 근무중인 사원들의 월급 총 합을 출력하자
SELECT SUM(SALARY)
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID)
JOIN LOCATIONS L
ON (D.LOCATION_ID = L.LOCATION_ID)
WHERE TO_CHAR(HIRE_DATE, 'YYYY') > '2004'
AND CITY = 'Seattle';


전체 평균 월급보다 월급을 많이 받는 사원들 중 9월에 입사한 사원들의 이름과 월급을 출력하자
SELECT FIRST_NAME, SALARY 
FROM EMPLOYEES 
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES) 
AND TO_CHAR(HIRE_DATE,'MM') = '09'

LAST_NAME 의 세번째 글자가 c인 사원들의 풀네임을 출력하자
SELECT LAST_NAME || ' ' || FIRST_NAME AS FULL_NAME
FROM EMPLOYEES
WHERE 'c' = SUBSTR(LAST_NAME, 3, 1);

부서 번호가 없는 사원의 이름(FIRST_NAME)과 직업(JOB_ID) 입사날(HIRE_DATE)을 출력하자
SELECT FIRST_NAME, JOB_ID, HIRE_DATE
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NULL;

Kevin보다 월급을 많이 받고 Susan 보다 적게 받는 사원의 이름과 월급을 출력하자?? 문제이상
SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE 

SELECT SALARY, FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME ='Kevin';

Asia에 속해있는 도시이름과 나라 이름을 출력하자
SELECT CITY, COUNTRY_NAME
FROM LOCATIONS JOIN COUNTRIES USING (COUNTRY_ID)
JOIN REGIONS USING (REGION_ID)
WHERE REGION_NAME = 'Asia';


월급이 4000이상인 사원의 이름과 부서명, 월급을 출력하자
SELECT FIRST_NAME, DEPARTMENT_NAME, SALARY
FROM EMPLOYEES E, DEPARTMENTS D
WHERE SALARY >= 4000
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT FIRST_NAME, DEPARTMENT_NAME, SALARY
FROM EMPLOYEES JOIN DEPARTMENTS USING (DEPARTMENT_ID)
WHERE SALARY >= 4000


부서의 평균월급이 전체 평균월급보다 높은 부서의 부서이름과 평균월급을 출력하자
SELECT * FROM(
SELECT DEPARTMENT_ID, AVG(SALARY) AVG_SAL FROM EMPLOYEES GROUP BY DEPARTMENT_ID)
WHERE AVG_SAL > (SELECT AVG(SALARY) FROM EMPLOYEES) 

월급을 가장 많이 받는 사원의 전화번호를 출력하자
SELECT PHONE_NUMBER
FROM EMPLOYEES
WHERE MAX(SALARY);

SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE MAX D

SELECT PHONE_NUMBER FROM EMPLOYEES WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEES))

Seattle 에 근무하는 사원중 이름이 'l' (엘)로 끝나는 사원의 이름과 직업을 출력하자

SELECT FIRST_NAME, JOB_TITLE
FROM EMPLOYEES E, LOCATIONS L, JOBS J, DEPARTMENTS D
WHERE CITY = 'Seattle'
AND FIRST_NAME LIKE '%l'
AND E.JOB_ID = J.JOB_ID
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.LOCATION_ID = L.LOCATION_ID;

SELECT FIRST_NAME, JOB_ID FROM EMPLOYEES WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID IN (SELECT LOCATION_ID FROM LOCATIONS WHERE CITY = 'Seattle'))
AND FIRST_NAME LIKE '%l'

select * from employees
join departments
on (employees.department_id = departments.department_id)
join locations
on (locations.location_id = departments.location_id)
where city = 'Seattle'
and first_name like '%l'; 


입사한 년도(hire_date)별로 인원수를 출력하자

SELECT YEAR, COUNT(*)
FROM (SELECT TO_CHAR(HIRE_DATE, 'YYYY') YEAR 
	FROM EMPLOYEES)
group by year
order by year;
캐나다에서 일하는 직원의 수를 출력하자

입사 후 직업의 변경이 없는 사원의 사원 번호, 이름, 입사일, 월급, 부서 이름을 출력하자
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE, SALARY, DEPARTMENT_ID FROM EMPLOYEES 
WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID 
			FROM 
				(SELECT EMPLOYEE_ID, COUNT(JOB_ID) 
				FROM JOB_HISTORY 
				GROUP BY EMPLOYEE_ID 
				HAVING COUNT(JOB_ID) = 1)
			);

?각 부서 별 커미션이 책정되지 않은 사원의 수를 출력하자

핸드폰 번호가 011 로 시작하는 사원의 이름, 전화번호, 이메일을 출력하자
SELECT FIRST_NAME, PHONE_NUMBER, EMAIL
FROM EMPLOYEES
WHERE PHONE_NUMBER LIKE '011%';


이름이 Britney 인 사원과 같은 부서에서 일하면서, Britney와 직업(JOB_ID)도 같은 사원의 모든 것을 출력하라.

SELECT * 
FROM EMPLOYEES 
WHERE 
DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Britney')
AND
JOB_ID IN (SELECT JOB_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Britney')

?IT 부서의 관리자의 연봉(commission_pct 생각하기) 보다 더 많은 평균 월급을 받는 부서의 부서번호와 부서이름을 출력하자

SELECT DEPARTMENT_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID

