flights2015 / SQL

1. COUNT 가 2에서 10 사이인 행 추출 LIMIT 5

2. COUNT 가 10의 배수인것 최고 수치 5개 추출

3. 목적지가 미국인 것을 FROM_USA_FLIGHT 칼럼을 추가해 TRUE 로 표시

4. 목적지와 출발지를 한칸에 표시하시오.
EX) Romania -> Egypt

5. 출발지가 싱가포르인 행 추출 리미트 2

6. count 15 보다 작고 목적지가 미국인 행 추출

7. 테이블에서 count가 100이상인 row의 모든 column을 10개 출력

8. 테이블에서 목적지가 미국이고 count가 10이상인 행의 모든 속성을 오름차순 정렬해서 10개 출력

9. 출발지로 저장된 나라의 개수를 출력, 열 이름은 origin_count로 지정

10. 목적지가 미국이거나 중국이고 count가 10이상인 행의 모든 속성을 count는 오름차순 목적지는 내림차순으로 정렬한 결과를 모두 출력

11. 미국의 국내선 운행 count 출력
 
12. domestic_flight(origin=destination) 운행정보만 출력

13. count가 10이하인 DEST_COUNTRY_NAME를 오름차순으로 정렬해서 출력

14. count가 1000이상인 ORIGIN_COUNTRY_NAME의 개수(중복제거)를 출력

15. A로 시작하는 ORIGIN_COUNTRY_NAME 출력

16. 프랑스,캐나다,스페인,쿠바에 해당하는 모든 컬럼 출력

17. DEST_COUNTRY_NAME이 United States이고, Count가 500이상 출력 

18. DEST_COUNTRY_NAME별 count의 합계(dest_sum)를 내림차순으로 출력

19~22. DEST_COUNTRY_NAME으로 된 컬럼 이름을 arrivals로 바꿔서 위에서부터 5행 출력하시오.
(- DataFrame 형식으로 데이터 분석 답 3개 - spark.sql(ANSI 표준 쿼리)형식으로 데이터 분석 답 1개)

23. flights2015에서 DEST_COUNTRY_NAME이 'United States'가 아니고 가운데에 s가 있는 나라를 출력하시오(spark.sql형식으로).

24. DEST_COUNTRY_NAME의 각 행의 문자열 개수를 출력하시오(DF형식으로).



retails / SQL
r101201 = spark.read.option("header", "true").csv("data/retails/2010-12-01.csv")

1. InvoiceNo, StocCode, InvoiceDate, UnitPrice, CustomerID를 InvoiceDate 를 기준으로 오름차순으로 정렬하여 출력

2. r101201의 row 갯수를 출력

3. UnitPrice 를 기준으로 내림차순 정렬하여 출력

4. UnitPrice 가 3.00 보다 크고 Quantity가 1보다 큰 것들을 출력

5. Country 가 United Kingdom 이 아닌 것들을 출력

6. Customer ID 를 통해 겹치지 않는 개별적인 Customer ID 가 몇개 인지 출력

